CREATE TABLE genre
(id INTEGER AUTO_INCREMENT,
name VARCHAR(24) UNIQUE,
PRIMARY KEY(id));

CREATE TABLE category
(id INTEGER AUTO_INCREMENT,
name VARCHAR(24) UNIQUE,
PRIMARY KEY(id));

CREATE TABLE contains
(gen_id INTEGER,
cat_id INTEGER,
PRIMARY KEY(gen_id, cat_id));

CREATE TABLE building
(id INTEGER AUTO_INCREMENT,
name VARCHAR(100),
address VARCHAR(200),
postal_code VARCHAR(6),
lat_long VARCHAR(30),
PRIMARY KEY(id),
UNIQUE(postal_code));

CREATE TABLE details_of_activity_located_in
(shop_name VARCHAR(100),
unit_no VARCHAR(20),
tel_num VARCHAR(10),
website VARCHAR(100),
reviews_avg VARCHAR(5),
total_reviews INTEGER,
build_id INTEGER,
PRIMARY KEY(shop_name, unit_no, build_id));

CREATE TABLE located_at
(cat_id INTEGER,
shop_name VARCHAR(100),
unit_no VARCHAR(20),
build_id INTEGER,
PRIMARY KEY(cat_id, shop_name, unit_no, build_id));

CREATE TABLE rating
(id INTEGER AUTO_INCREMENT,
name VARCHAR(30),
date VARCHAR(10),
num_stars INTEGER,
review VARCHAR(2000),
PRIMARY KEY(id));

CREATE TABLE has_ratings
(rating_id INTEGER,
shop_name VARCHAR(100),
unit_no VARCHAR(20),
build_id INTEGER,
PRIMARY KEY(rating_id, shop_name, unit_no, build_id));

CREATE TABLE user
(id INTEGER AUTO_INCREMENT,
username VARCHAR(20),
password VARCHAR(20),
PRIMARY KEY(id),
UNIQUE(username));

CREATE TABLE searched
(user_id INTEGER,
history_id INTEGER,
PRIMARY KEY(user_id, history_id));

CREATE TABLE search_history
(id INTEGER AUTO_INCREMENT,
genre VARCHAR(24),
PRIMARY KEY(id));

/*
CREATE TABLE age
(id INTEGER AUTO_INCREMENT,
category VARCHAR(24),
PRIMARY KEY(id));

CREATE TABLE for_ages
(unit_no VARCHAR(10),
build_id INTEGER,
age_id INTEGER,
PRIMARY KEY(unit_no, build_id, age_id),
FOREIGN KEY(unit_no, build_id) REFERENCES details_of_activity_located_in(unit_no, build_id),
FOREIGN KEY(age_id) REFERENCES age(id));

CREATE TABLE group_size
(id INTEGER AUTO_INCREMENT,
category VARCHAR(24),
PRIMARY KEY(id));

CREATE TABLE for_groups
(unit_no VARCHAR(10),
build_id INTEGER,
group_id INTEGER,
PRIMARY KEY(unit_no, build_id, group_id),
FOREIGN KEY(unit_no, build_id) REFERENCES details_of_activity_located_in(unit_no, build_id),
FOREIGN KEY(group_id) REFERENCES group_size(id));
*/